package org.teleight.td.codegenerator;

import com.github.javaparser.ParserConfiguration;
import com.github.javaparser.StaticJavaParser;
import com.github.javaparser.ast.CompilationUnit;
import org.apache.commons.io.FileUtils;
import org.teleight.td.codegenerator.extractor.FunctionsExtractor;
import org.teleight.td.codegenerator.extractor.ObjectExtractor;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;

/**
 * This is an HIGHLY EXPERIMENTAL code generator for the TDLib Java API.
 * Is currently not 100% working, but it's a good start.
 */
public class CodeGenerator {

    public static final String DEFAULT_PACKAGE = "org.teleight.td";

    public static void main(String[] args) {
        final InputStream tdApiAsStream = CodeGenerator.class.getResourceAsStream("/TdApi.java");
        if (tdApiAsStream == null) {
            return;
        }
        final File autogeneratedPath = new File("src\\autogenerated\\java");
        try {
            FileUtils.deleteDirectory(autogeneratedPath);
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }

        final String tdApiClassAsString;
        try {
            tdApiClassAsString = new String(tdApiAsStream.readAllBytes());
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }

        ParserConfiguration parserConfiguration = new ParserConfiguration();
        parserConfiguration.setLanguageLevel(ParserConfiguration.LanguageLevel.JAVA_18);
        StaticJavaParser.setConfiguration(parserConfiguration);


        CompilationUnit extractorUnit = StaticJavaParser.parse(tdApiClassAsString);
        extractorUnit.accept(new ObjectExtractor(), null);
        extractorUnit.accept(new FunctionsExtractor(), null);
    }

}
